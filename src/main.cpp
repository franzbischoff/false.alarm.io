
#include "Mpx.hpp"

using namespace MatrixProfile;

int main() {
  std::vector<float> test_data = {
      55.43, 78.76, 43.83, 1.14,  98.50, 2.79,  29.80, 90.06, 65.44, 92.80, 87.86, 62.11, 72.78, 14.68, 31.69,
      48.14, 57.24, 70.79, 93.75, 9.28,  18.05, 8.68,  6.23,  73.46, 45.41, 32.59, 28.32, 57.32, 8.73,  61.63,
      2.70,  16.51, 53.18, 58.40, 22.92, 30.94, 40.17, 7.66,  17.23, 9.61,  41.01, 64.25, 92.30, 82.79, 19.08,
      96.84, 31.22, 33.42, 89.03, 34.07, 92.16, 15.32, 92.70, 95.81, 39.43, 27.46, 39.96, 71.79, 67.74, 73.43,
      42.42, 42.71, 80.19, 3.88,  38.81, 80.11, 28.13, 31.69, 29.31, 97.22, 78.79, 25.01, 36.73, 12.52, 80.24,
      17.95, 87.75, 96.40, 91.93, 22.08, 31.38, 94.84, 17.10, 46.22, 5.18,  80.72, 18.91, 42.84, 88.48, 20.10,
      97.17, 53.87, 18.40, 94.31, 3.36,  40.19, 76.92, 57.16, 13.82, 63.26};

  Mpx mpx(test_data, 10, 0.5, 0);

  // mpx.Compute();
  mpx.ComputeStream();

  std::vector<float> res = mpx.get_matrix();

  std::cout << std::endl;

  for (float n : res) {
    std::cout << n << ", ";
  }

  std::cout << std::endl;
  std::cout << std::endl;

  std::vector<int> idx = mpx.get_indexes();

  for (int n : idx) {
    std::cout << n << ", ";
  }
  std::cout << std::endl;

  return 0;
}
